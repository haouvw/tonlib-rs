default:
  image: ${CI_REGISTRY}/ston-fi/docker/rust-build:20.10.24_1.82.0
  tags:
    - zen4

include:
  - project: "ston-fi/infrastructure/gitlab-ci-templates"
    ref: "main"
    file: "rust/rust-cache-helper.yml"

# Prevent duplicate pipelines, branch pipeline and merge_request pipeline
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: "$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS"
      when: never
    - if: "$CI_COMMIT_BRANCH || $CI_COMMIT_TAG"

stages:
  - test

variables:
  CARGO_INCREMENTAL: 0
  GIT_DEPTH: 100
  RUSTFLAGS: "-D warnings -C target-cpu=znver2"
  TARGET_CPU_MARCH: "znver2"

test:
  stage: test
  before_script:
    - !reference [.rust-cache-helper, install]
    - !reference [.rust-cache-helper, before]
  script:
    - cargo fmt --check
    - cargo clippy --release
    - cargo clippy --features "emulate_get_method" --release

    - cargo build --release
    - cargo build --release --features "emulate_get_method"
    - cargo test --release --package tonlib-core
    - cargo test --release --doc
    - cargo test --release --lib
    - cargo test --release --lib --features "emulate_get_method"
    - !reference [.rust-cache-helper, after]
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'
  interruptible: true

integration_test:
  stage: test
  before_script:
    - !reference [.rust-cache-helper, install]
    - !reference [.rust-cache-helper, before]
  script:
    - cargo install cargo-nextest
    - cargo nextest run --release
    - cargo nextest run --release --features "emulate_get_method"
    - !reference [.rust-cache-helper, after]
  when: manual
  interruptible: true

test-mr:
  tags:
    - zen4
  stage: test
  before_script:
    - !reference [.rust-cache-helper, install]
    - !reference [.rust-cache-helper, before]
  script:
    - cargo fmt --check
    - cargo clippy --release --no-default-features --no-deps
    - cargo build --release --no-default-features
    - cargo test --release --lib --no-default-features
    - cargo clippy --release --all-features
    - cargo build --release --all-features
    - cargo test --release --lib --all-features
    - !reference [.rust-cache-helper, after]
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  interruptible: true

test-master:
  stage: test
  before_script:
    - !reference [.rust-cache-helper, install]
    - !reference [.rust-cache-helper, before]
  script:
    - cargo fmt --check
    - cargo build --release --all-features
    - cargo test --release --lib --all-features
    - !reference [.rust-cache-helper, after]
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  interruptible: true
